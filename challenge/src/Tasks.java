import java.util.List;
import java.util.Map;

public interface Tasks {

    /**
     * (2 балла)
     *
     * Метод reverseArray обращает порядок следования элементов в массиве array.
     * Метод изменяет порядок элементов "на месте", т.е., не использует дополнительную память
     * для промежуточных вычислений.
     * Метод не использует классы из стандартных библиотек (включая пакет java.util)
     *
     * @param array массив произвольной длины
     *
     * ПРИМЕР:
     * Вход: array = [1, 2, 3, 4]
     * Выход: array = [4, 3, 2, 1]
     */
    void reverseArray(int[] array);

    /**
     * (2 балла)
     *
     * Метод getSum возвращает сумму значений всех записей в словаре map, имеющих ключ длины 2.
     *
     * ПРИМЕР:
     * Вход: map = {"xx": 2.2, "xy": 3.3, "x": -1.0, "y": -2.0}
     * Выход: 5.5 (только первые две записи имеют ключ длины 2)
     */
    double getSum(Map<String, Double> map);

    /**
     * (2 балла)
     *
     * Метод getOddNumbers возвращает в порядке убывания все нечетные числа, содержащиеся в списке list.
     * Метод getOddNumbers не использует условные операторы (if, switch, ?) и циклы (for, while, do-while).
     * Вместо этого метод getOddNumbers использует методы Java Stream API (filter, map, sorted, ...).
     *
     * ПРИМЕР:
     * Вход: list = [1, 2, 3, 4, 5, 6]
     * Выход: [5, 3, 1]
     */
    List<Integer> getOddNumbers(List<Integer> list);

}